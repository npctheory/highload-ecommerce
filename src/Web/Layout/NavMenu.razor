@inject ICategoryService CategoryService
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Highload Item Shop</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Главная
            </NavLink>
        </div>
        @foreach (var category in CategoryService.Categories)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@category.Url">@category.Name</NavLink>
            </div>
        }
        <div class="dropdown-divider"></div>
        <div class="nav-item px-3">
            <AuthorizeView>
                <Authorized>
                    <NavLink class="nav-link" href="#" @onclick="signout">Выйти из системы</NavLink>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link" href="signin">Войти в систему</NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.LoadCategoriesAsync();
    }

    private async void signout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await LocalStorage.RemoveItemAsync("id");
        await ((CustomAuthStateProvider)AuthenticationStateProvider).GetAuthenticationStateAsync();
    }
}
